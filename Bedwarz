local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Define the main frame and its properties
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SampleGui"
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false -- Disable ResetOnSpawn

local mainFrame = Instance.new("Frame")
mainFrame.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
mainFrame.BackgroundTransparency = 0.5
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
mainFrame.Size = UDim2.new(0, 300, 0, 150)
mainFrame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 15)
uiCorner.Parent = mainFrame

local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.fromRGB(255, 255, 255)
uiStroke.Thickness = 2
uiStroke.Parent = mainFrame

-- Define the Blatant Frame
local blatantFrame = Instance.new("Frame")
blatantFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
blatantFrame.BackgroundTransparency = 0.5
blatantFrame.Position = UDim2.new(0, 0, 0, 40)
blatantFrame.Size = UDim2.new(1, 0, 1, -40)
blatantFrame.Visible = false
blatantFrame.Parent = mainFrame

local blatantFrameCorner = Instance.new("UICorner")
blatantFrameCorner.CornerRadius = UDim.new(0, 15)
blatantFrameCorner.Parent = blatantFrame

-- Define the Kill Aura Button
local killAuraButton = Instance.new("TextButton")
killAuraButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Default color
killAuraButton.BackgroundTransparency = 1 -- Fully transparent by default
killAuraButton.Position = UDim2.new(0, 10, 0, 10)
killAuraButton.Size = UDim2.new(0, 130, 0, 30)
killAuraButton.Font = Enum.Font.SourceSans
killAuraButton.Text = "Kill Aura"
killAuraButton.TextColor3 = Color3.fromRGB(255, 255, 255)
killAuraButton.TextSize = 18
killAuraButton.TextStrokeTransparency = 0
killAuraButton.Parent = blatantFrame

-- Function to get the closest player
local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    if character then
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer and player.Team ~= localPlayer.Team then
                    local playerCharacter = player.Character
                    if playerCharacter then
                        local playerHRP = playerCharacter:FindFirstChild("HumanoidRootPart")
                        if playerHRP then
                            local distance = (hrp.Position - playerHRP.Position).magnitude
                            if distance < shortestDistance then
                                closestPlayer = playerCharacter
                                shortestDistance = distance
                            end
                        end
                    end
                end
            end
        end
    end
    return closestPlayer
end

-- Function to check if a player is close
local function isPlayerClose()
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    if character then
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer and player.Team ~= localPlayer.Team then
                    local playerCharacter = player.Character
                    if playerCharacter then
                        local playerHRP = playerCharacter:FindFirstChild("HumanoidRootPart")
                        if playerHRP then
                            local distance = (hrp.Position - playerHRP.Position).magnitude
                            if distance <= 2 then
                                return true
                            end
                        end
                    end
                end
            end
        end
    end
    return false
end

-- Function to get the sword name
local function getSwordName()
    local swords = {
        "Wooden Sword",
        "Stone Sword",
        "Diamond Sword",
        "Emerald Sword"
    }

    for _, swordName in ipairs(swords) do
        if Players.LocalPlayer.Backpack:FindFirstChild(swordName) or Players.LocalPlayer.Character:FindFirstChild(swordName) then
            return swordName
        end
    end

    return nil
end

-- Start the Kill Aura loop
local killAuraEnabled = false

local function startKillAura()
    while killAuraEnabled do
        if isPlayerClose() then
            local target = getClosestPlayer()
            local swordName = getSwordName()
            if target and swordName then
                local args = {
                    [1] = target,
                    [2] = swordName
                }
                ReplicatedStorage.Remotes.SwordAttack:FireServer(unpack(args))
            end
        end
        wait(0.5) -- Adjust the frequency as needed
    end
end

killAuraButton.MouseButton1Click:Connect(function()
    killAuraEnabled = not killAuraEnabled
    if killAuraEnabled then
        -- Turn button background green and opaque when enabled
        killAuraButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green
        killAuraButton.BackgroundTransparency = 0
        -- Start the kill aura loop
        RunService.Heartbeat:Connect(startKillAura)
    else
        -- Turn button background black and fully transparent when disabled
        killAuraButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black
        killAuraButton.BackgroundTransparency = 1
    end
end)

-- Define the Fly Button
local flyButton = Instance.new("TextButton")
flyButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Default color
flyButton.BackgroundTransparency = 1 -- Fully transparent by default
flyButton.Position = UDim2.new(0, 10, 0, 50)
flyButton.Size = UDim2.new(0, 130, 0, 30)
flyButton.Font = Enum.Font.SourceSans
flyButton.Text = "Fly"
flyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
flyButton.TextSize = 18
flyButton.TextStrokeTransparency = 0
flyButton.Parent = blatantFrame

-- Fly function
local flyEnabled = false

local function fly()
    while flyEnabled do
        game.Workspace.Gravity = 0
        wait()
    end
    game.Workspace.Gravity = 196.2 -- Restore default gravity
end

flyButton.MouseButton1Click:Connect(function()
    flyEnabled = not flyEnabled
    if flyEnabled then
        -- Turn button background green and opaque when enabled
        flyButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green
        flyButton.BackgroundTransparency = 0
        -- Start the fly function
        RunService.Heartbeat:Connect(fly)
    else
        -- Turn button background black and fully transparent when disabled
        flyButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black
        flyButton.BackgroundTransparency = 1
        game.Workspace.Gravity = 196.2 -- Restore default gravity
    end
end)

-- Define the Collect frame
local collectFrame = Instance.new("Frame")
collectFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
collectFrame.BackgroundTransparency = 0.5
collectFrame.Position = UDim2.new(0, 0, 0, 40)
collectFrame.Size = UDim2.new(1, 0, 1, -40)
collectFrame.Visible = false
collectFrame.Parent = mainFrame

local collectFrameCorner = Instance.new("UICorner")
collectFrameCorner.CornerRadius = UDim.new(0, 15)
collectFrameCorner.Parent = collectFrame

-- Collect buttons
local diamondButton = Instance.new("TextButton")
diamondButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
diamondButton.BackgroundTransparency = 1
diamondButton.Position = UDim2.new(0, 10, 0, 10)
diamondButton.Size = UDim2.new(0, 130, 0, 30)
diamondButton.Font = Enum.Font.SourceSans
diamondButton.Text = "Collect Diamonds"
diamondButton.TextColor3 = Color3.fromRGB(255, 255, 255)
diamondButton.TextSize = 18
diamondButton.TextStrokeTransparency = 0
diamondButton.Parent = collectFrame

local emeraldButton = Instance.new("TextButton")
emeraldButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
emeraldButton.BackgroundTransparency = 1
emeraldButton.Position = UDim2.new(0, 160, 0, 10)
emeraldButton.Size = UDim2.new(0, 130, 0, 30)
emeraldButton.Font = Enum.Font.SourceSans
emeraldButton.Text = "Collect Emeralds"
emeraldButton.TextColor3 = Color3.fromRGB(255, 255, 255)
emeraldButton.TextSize = 18
emeraldButton.TextStrokeTransparency = 0
emeraldButton.Parent = collectFrame

local collectAllDiamondsButton = Instance.new("TextButton")
collectAllDiamondsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
collectAllDiamondsButton.BackgroundTransparency = 1
collectAllDiamondsButton.Position = UDim2.new(0, 10, 0, 50)
collectAllDiamondsButton.Size = UDim2.new(0, 130, 0, 30)
collectAllDiamondsButton.Font = Enum.Font.SourceSans
collectAllDiamondsButton.Text = "Collect All Diamonds"
collectAllDiamondsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
collectAllDiamondsButton.TextSize = 18
collectAllDiamondsButton.TextStrokeTransparency = 0
collectAllDiamondsButton.Parent = collectFrame

local collectAllEmeraldsButton = Instance.new("TextButton")
collectAllEmeraldsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
collectAllEmeraldsButton.BackgroundTransparency = 1
collectAllEmeraldsButton.Position = UDim2.new(0, 160, 0, 50)
collectAllEmeraldsButton.Size = UDim2.new(0, 130, 0, 30)
collectAllEmeraldsButton.Font = Enum.Font.SourceSans
collectAllEmeraldsButton.Text = "Collect All Emeralds"
collectAllEmeraldsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
collectAllEmeraldsButton.TextSize = 18
collectAllEmeraldsButton.TextStrokeTransparency = 0
collectAllEmeraldsButton.Parent = collectFrame

-- Function to collect all items of a specific type
local function collectItems(itemType)
    local currentCFrame = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for _, v in pairs(game.Workspace.PickupableItems:FindFirstChild(itemType):GetChildren()) do
        if v then
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end

diamondButton.MouseButton1Click:Connect(function()
    collectItems("Diamond")
end)

emeraldButton.MouseButton1Click:Connect(function()
    collectItems("Emerald")
end)

collectAllDiamondsButton.MouseButton1Click:Connect(function()
    collectItems("Diamond")
end)

collectAllEmeraldsButton.MouseButton1Click:Connect(function()
    collectItems("Emerald")
end)

-- Define the X Button
local xButton = Instance.new("TextButton")
xButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
xButton.Position = UDim2.new(1, -30, 0, 0)
xButton.Size = UDim2.new(0, 30, 0, 30)
xButton.Font = Enum.Font.SourceSans
xButton.Text = "X"
xButton.TextColor3 = Color3.fromRGB(255, 255, 255)
xButton.TextSize = 20
xButton.TextStrokeTransparency = 0
xButton.Parent = mainFrame

local xButtonCorner = Instance.new("UICorner")
xButtonCorner.CornerRadius = UDim.new(0, 15)
xButtonCorner.Parent = xButton

local toggleVisibilityButton = Instance.new("TextButton")
toggleVisibilityButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green
toggleVisibilityButton.BackgroundTransparency = 0
toggleVisibilityButton.Position = UDim2.new(1, -30, 0, 0)
toggleVisibilityButton.Size = UDim2.new(0, 30, 0, 30)
toggleVisibilityButton.Font = Enum.Font.SourceSans
toggleVisibilityButton.Text = "Show"
toggleVisibilityButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleVisibilityButton.TextSize = 20
toggleVisibilityButton.TextStrokeTransparency = 0
toggleVisibilityButton.Visible = false
toggleVisibilityButton.Parent = screenGui

xButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    toggleVisibilityButton.Visible = true
end)

toggleVisibilityButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    toggleVisibilityButton.Visible = false
end)

-- Function to make the frame draggable for mobile users
local function makeFrameDraggable(frame)
    local userInputService = game:GetService("UserInputService")
    local dragging, dragInput, startPos, startSize

    local function update(input)
        local delta = input.Position - dragInput.Position
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragInput = input
            startPos = frame.Position
        end
    end)

    frame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    userInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.Touch then
            update(input)
        end
    end)
end

makeFrameDraggable(mainFrame)

-- Disable reset on spawn
screenGui.ResetOnSpawn = false

-- Clean up
game.Players.LocalPlayer.Anticheat:Destroy()
game.StarterPlayer.StarterPlayerScripts.Anticheat:Destroy()
