local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Define the main frame and its properties
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SampleGui"
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
mainFrame.BackgroundTransparency = 0.5
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
mainFrame.Size = UDim2.new(0, 300, 0, 150)
mainFrame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 15)
uiCorner.Parent = mainFrame

local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.fromRGB(255, 255, 255)
uiStroke.Thickness = 2
uiStroke.Parent = mainFrame

-- Define the Blatant Frame
local blatantFrame = Instance.new("Frame")
blatantFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
blatantFrame.BackgroundTransparency = 0.5
blatantFrame.Position = UDim2.new(0, 0, 0, 40)
blatantFrame.Size = UDim2.new(1, 0, 1, -40)
blatantFrame.Visible = false
blatantFrame.Parent = mainFrame

local blatantFrameCorner = Instance.new("UICorner")
blatantFrameCorner.CornerRadius = UDim.new(0, 15)
blatantFrameCorner.Parent = blatantFrame

-- Define the Kill Aura Button
local killAuraButton = Instance.new("TextButton")
killAuraButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Default color
killAuraButton.BackgroundTransparency = 1 -- Fully transparent by default
killAuraButton.Position = UDim2.new(0, 10, 0, 10)
killAuraButton.Size = UDim2.new(0, 130, 0, 30)
killAuraButton.Font = Enum.Font.SourceSans
killAuraButton.Text = "Kill Aura"
killAuraButton.TextColor3 = Color3.fromRGB(255, 255, 255)
killAuraButton.TextSize = 18
killAuraButton.TextStrokeTransparency = 0
killAuraButton.Parent = blatantFrame

-- Kill Aura Loop
local killAuraEnabled = false

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    if character then
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if hrp then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer and player.Team ~= localPlayer.Team then
                    local playerCharacter = player.Character
                    if playerCharacter then
                        local playerHRP = playerCharacter:FindFirstChild("HumanoidRootPart")
                        if playerHRP then
                            local distance = (hrp.Position - playerHRP.Position).magnitude
                            if distance < shortestDistance then
                                closestPlayer = playerCharacter
                                shortestDistance = distance
                            end
                        end
                    end
                end
            end
        end
    end
    return closestPlayer
end

local function startKillAura()
    while killAuraEnabled do
        local target = getClosestPlayer()
        if target then
            local args = {
                [1] = target,
                [2] = "Wooden Sword"
            }
            ReplicatedStorage.Remotes.SwordAttack:FireServer(unpack(args))
        end
        wait(0.5) -- Adjust the frequency as needed
    end
end

killAuraButton.MouseButton1Click:Connect(function()
    killAuraEnabled = not killAuraEnabled
    if killAuraEnabled then
        -- Turn button background green and opaque when enabled
        killAuraButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green
        killAuraButton.BackgroundTransparency = 0
        -- Start the kill aura loop
        RunService.Heartbeat:Connect(startKillAura)
    else
        -- Turn button background black and fully transparent when disabled
        killAuraButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black
        killAuraButton.BackgroundTransparency = 1
    end
end)

-- Reuse previous section button functionality
local sectionNames = {"Collect", "Utility", "Blatant"}
local sectionButtons = {}
local buttonWidth = 100

for i, name in ipairs(sectionNames) do
    local button = Instance.new("TextButton")
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.BackgroundTransparency = 1
    button.Position = UDim2.new(0, (i-1) * buttonWidth, 0, 0)
    button.Size = UDim2.new(0, buttonWidth, 0, 40)
    button.Font = Enum.Font.SourceSans
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 18
    button.TextStrokeTransparency = 0
    button.Parent = mainFrame
    table.insert(sectionButtons, button)
end

-- Collect frame
local collectFrame = Instance.new("Frame")
collectFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
collectFrame.BackgroundTransparency = 0.5
collectFrame.Position = UDim2.new(0, 0, 0, 40)
collectFrame.Size = UDim2.new(1, 0, 1, -40)
collectFrame.Visible = false
collectFrame.Parent = mainFrame

local collectFrameCorner = Instance.new("UICorner")
collectFrameCorner.CornerRadius = UDim.new(0, 15)
collectFrameCorner.Parent = collectFrame

-- Collect buttons
local diamondButton = Instance.new("TextButton")
diamondButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
diamondButton.BackgroundTransparency = 1
diamondButton.Position = UDim2.new(0, 10, 0, 10)
diamondButton.Size = UDim2.new(0, 130, 0, 30)
diamondButton.Font = Enum.Font.SourceSans
diamondButton.Text = "Collect Diamonds"
diamondButton.TextColor3 = Color3.fromRGB(255, 255, 255)
diamondButton.TextSize = 18
diamondButton.TextStrokeTransparency = 0
diamondButton.Parent = collectFrame

local emeraldButton = Instance.new("TextButton")
emeraldButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
emeraldButton.BackgroundTransparency = 1
emeraldButton.Position = UDim2.new(0, 160, 0, 10)
emeraldButton.Size = UDim2.new(0, 130, 0, 30)
emeraldButton.Font = Enum.Font.SourceSans
emeraldButton.Text = "Collect Emeralds"
emeraldButton.TextColor3 = Color3.fromRGB(255, 255, 255)
emeraldButton.TextSize = 18
emeraldButton.TextStrokeTransparency = 0
emeraldButton.Parent = collectFrame

local collectAllDiamondsButton = Instance.new("TextButton")
collectAllDiamondsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
collectAllDiamondsButton.BackgroundTransparency = 1
collectAllDiamondsButton.Position = UDim2.new(0, 10, 0, 50)
collectAllDiamondsButton.Size = UDim2.new(0, 130, 0, 30)
collectAllDiamondsButton.Font = Enum.Font.SourceSans
collectAllDiamondsButton.Text = "Collect All Diamonds"
collectAllDiamondsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
collectAllDiamondsButton.TextSize = 18
collectAllDiamondsButton.TextStrokeTransparency = 0
collectAllDiamondsButton.Parent = collectFrame

local collectAllEmeraldsButton = Instance.new("TextButton")
collectAllEmeraldsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
collectAllEmeraldsButton.BackgroundTransparency = 1
collectAllEmeraldsButton.Position = UDim2.new(0, 160, 0, 50)
collectAllEmeraldsButton.Size = UDim2.new(0, 130, 0, 30)
collectAllEmeraldsButton.Font = Enum.Font.SourceSans
collectAllEmeraldsButton.Text = "Collect All Emeralds"
collectAllEmeraldsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
collectAllEmeraldsButton.TextSize = 18
collectAllEmeraldsButton.TextStrokeTransparency = 0
collectAllEmeraldsButton.Parent = collectFrame

-- Collect functions
diamondButton.MouseButton1Click:Connect(function()
    local currentCFrame = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for _, v in pairs(game.Workspace.PickupableItems:FindFirstChild("Diamond"):GetChildren()) do
        if v then
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end)

emeraldButton.MouseButton1Click:Connect(function()
    local currentCFrame = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for _, v in pairs(game.Workspace.PickupableItems:FindFirstChild("Emerald"):GetChildren()) do
        if v then
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end)

collectAllDiamondsButton.MouseButton1Click:Connect(function()
    local currentCFrame = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for _, v in pairs(game.Workspace.PickupableItems:FindFirstChild("Diamond"):GetChildren()) do
        if v then
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end)

collectAllEmeraldsButton.MouseButton1Click:Connect(function()
    local currentCFrame = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for _, v in pairs(game.Workspace.PickupableItems:FindFirstChild("Emerald"):GetChildren()) do
        if v then
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end)

-- Blatant section button functionality
sectionButtons[1].MouseButton1Click:Connect(function()
    collectFrame.Visible = true
    blatantFrame.Visible = false
end)

sectionButtons[2].MouseButton1Click:Connect(function()
    collectFrame.Visible = false
    blatantFrame.Visible = false
end)

sectionButtons[3].MouseButton1Click:Connect(function()
    collectFrame.Visible = false
    blatantFrame.Visible = true
end)

-- X button to close the main frame
local xButton = Instance.new("TextButton")
xButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red color
xButton.BackgroundTransparency = 0
xButton.Position = UDim2.new(1, -30, 0, 5)
xButton.Size = UDim2.new(0, 25, 0, 25)
xButton.Font = Enum.Font.SourceSans
xButton.Text = "X"
xButton.TextColor3 = Color3.fromRGB(255, 255, 255)
xButton.TextSize = 18
xButton.TextStrokeTransparency = 0
xButton.Parent = screenGui

xButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    xButton.Visible = false
end)

-- Button to reopen the main frame
local reopenButton = Instance.new("TextButton")
reopenButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green color
reopenButton.BackgroundTransparency = 0
reopenButton.Position = UDim2.new(1, -30, 0, 5)
reopenButton.Size = UDim2.new(0, 25, 0, 25)
reopenButton.Font = Enum.Font.SourceSans
reopenButton.Text = "+"
reopenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
reopenButton.TextSize = 18
reopenButton.TextStrokeTransparency = 0
reopenButton.Visible = false
reopenButton.Parent = screenGui

reopenButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    xButton.Visible = true
    reopenButton.Visible = false
end)

-- Update the visibility of the reopen button
mainFrame:GetPropertyChangedSignal("Visible"):Connect(function()
    reopenButton.Visible = not mainFrame.Visible
end)

-- Make the main frame draggable
local dragging, dragInput, startPos, startSize

local function update(input)
    local delta = input.Position - dragInput.Position
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragInput = input
        startPos = mainFrame.Position
        startSize = mainFrame.Size
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        if dragging then
            update(input)
        end
    end
end)
