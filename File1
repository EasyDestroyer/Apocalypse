
setfpscap(244)



-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local backpack = Players.LocalPlayer.Backpack
local AdminModule = loadstring(game:HttpGet("https://raw.githubusercontent.com/EasyDestroyer/EasyDestroyerCodes/main/AdminModule"))()

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = math.random(1000000, 99999999999)
screenGui.Parent = game.CoreGui
screenGui.ResetOnSpawn = false

-- Create the main frame
local mainFrame = Instance.new("Frame")
mainFrame.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
mainFrame.BackgroundTransparency = 0.5
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
mainFrame.Size = UDim2.new(0, 300, 0, 200)
mainFrame.Visible = false
mainFrame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 15)
uiCorner.Parent = mainFrame

local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.fromRGB(255, 255, 255)
uiStroke.Thickness = 2
uiStroke.Parent = mainFrame

-- Create the tab container
local tabContainer = Instance.new("Frame")
tabContainer.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
tabContainer.BackgroundTransparency = 0.5
tabContainer.Size = UDim2.new(1, 0, 0, 40)
tabContainer.Position = UDim2.new(0, 0, 0, 0)
tabContainer.Parent = mainFrame

local tabCorner = Instance.new("UICorner")
tabCorner.CornerRadius = UDim.new(0, 15)
tabCorner.Parent = tabContainer



-- Create tab buttons
local function createTabButton(name, position, parent)
    local button = Instance.new("TextButton")
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.BackgroundTransparency = 1
    button.Position = position
    button.Size = UDim2.new(0, 100, 0, 40)
    button.Font = Enum.Font.SourceSans
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 18
    button.TextStrokeTransparency = 0
    button.Parent = parent
    return button
end

local collectButton = createTabButton("Collect", UDim2.new(0, 0, 0, 0), tabContainer)
local blatantButton = createTabButton("Blatant", UDim2.new(0, 100, 0, 0), tabContainer)
local utilityButton = createTabButton("Utility", UDim2.new(0, 200, 0, 0), tabContainer)

-- Create the Collect frame
local collectFrame = Instance.new("Frame")
collectFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
collectFrame.BackgroundTransparency = 0.5
collectFrame.Position = UDim2.new(0, 0, 0, 40)
collectFrame.Size = UDim2.new(1, 0, 1, -40)
collectFrame.Visible = false
collectFrame.Parent = mainFrame

local collectFrameCorner = Instance.new("UICorner")
collectFrameCorner.CornerRadius = UDim.new(0, 15)
collectFrameCorner.Parent = collectFrame

-- Create buttons in Collect frame
local function createCollectButton(name, position, parent, callback)
    local button = Instance.new("TextButton")
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.BackgroundTransparency = 1
    button.Position = position
    button.Size = UDim2.new(0, 130, 0, 30)
    button.Font = Enum.Font.SourceSans
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 18
    button.TextStrokeTransparency = 0
    button.Parent = parent
    button.MouseButton1Click:Connect(callback)
    return button
end

local function collectDiamonds()
    local player = Players.LocalPlayer
    local currentCFrame = player.Character.HumanoidRootPart.CFrame
    for _, v in pairs(Workspace.PickupableItems:FindFirstChild("Diamond"):GetChildren()) do
        if v then
            player.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            player.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end

local function collectEmeralds()
    local player = Players.LocalPlayer
    local currentCFrame = player.Character.HumanoidRootPart.CFrame
    for _, v in pairs(Workspace.PickupableItems:FindFirstChild("Emerald"):GetChildren()) do
        if v then
            player.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            player.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end

local function collectAllDiamonds()
    local player = Players.LocalPlayer
    local currentCFrame = player.Character.HumanoidRootPart.CFrame
    for _, v in pairs(Workspace.PickupableItems:FindFirstChild("Diamond"):GetChildren()) do
        if v then
            player.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            player.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end

local function collectAllEmeralds()
    local player = Players.LocalPlayer
    local currentCFrame = player.Character.HumanoidRootPart.CFrame
    for _, v in pairs(Workspace.PickupableItems:FindFirstChild("Emerald"):GetChildren()) do
        if v then
            player.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.5)
            player.Character.HumanoidRootPart.CFrame = currentCFrame
        end
    end
end

local diamondButton = createCollectButton("Collect Diamonds", UDim2.new(0, 10, 0, 10), collectFrame, collectDiamonds)
local emeraldButton = createCollectButton("Collect Emeralds", UDim2.new(0, 160, 0, 10), collectFrame, collectEmeralds)
local collectAllDiamondsButton = createCollectButton("Collect All Diamonds", UDim2.new(0, 10, 0, 50), collectFrame, collectAllDiamonds)
local collectAllEmeraldsButton = createCollectButton("Collect All Emeralds", UDim2.new(0, 160, 0, 50), collectFrame, collectAllEmeralds)

-- Create the Blatant frame
local blatantFrame = Instance.new("Frame")
blatantFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
blatantFrame.BackgroundTransparency = 0.5
blatantFrame.Position = UDim2.new(0, 0, 0, 40)
blatantFrame.Size = UDim2.new(1, 0, 1, -40)
blatantFrame.Visible = false
blatantFrame.Parent = mainFrame

local blatantFrameCorner = Instance.new("UICorner")
blatantFrameCorner.CornerRadius = UDim.new(0, 15)
blatantFrameCorner.Parent = blatantFrame

-- Create buttons in Blatant frame
local function createBlatantButton(name, position, parent)
    local button = Instance.new("TextButton")
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.BackgroundTransparency = 1
    button.Position = position
    button.Size = UDim2.new(0, 130, 0, 30)
    button.Font = Enum.Font.SourceSans
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 18
    button.TextStrokeTransparency = 0
    button.Parent = parent

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 10) -- Adjust the radius as needed
    uiCorner.Parent = button
    return button
end

local killAuraButton = createBlatantButton("Kill Aura", UDim2.new(0, 10, 0, 10), blatantFrame)
local flyButton = createBlatantButton("Fly", UDim2.new(0, 10, 0, 50), blatantFrame)
local nukerButton = createBlatantButton("Nuker", UDim2.new(0, 10, 0, 90), blatantFrame)
local bowAuraButton = createBlatantButton("BowAura", UDim2.new(0, 10, 0, 130), blatantFrame)
local walkSpeedButton = createBlatantButton("Walk Speed", UDim2.new(0, 160, 0, 10), blatantFrame)
if AdminModule.isAdmin(Players.LocalPlayer.Name) then
local instaWinButton = createBlatantButton("Instant Win", UDim2.new(0, 160, 0, 50), blatantFrame)

instaWinButton.MouseButton1Click:Connect(function()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local numRepeats = 15 -- Number of times to fire DamageHumanoid for each player

-- Loop to fire DamageBlock until there are no beds left
while #game.Workspace.Map.Beds:GetChildren() > 0 do
    for _, bed in ipairs(game.Workspace.Map.Beds:GetChildren()) do
        local args = {
            [1] = bed,
            [2] = "Wooden Pickaxe"
        }
        ReplicatedStorage.Remotes.DamageBlock:InvokeServer(unpack(args))
    end
    wait(0.001) -- Optional: Add a short delay between each full pass
end

-- Fire DamageHumanoid for all players except yourself after beds are gone
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
        for i = 1, numRepeats do
            local args = {
                [1] = player.Character.Humanoid,
                [2] = "inf"
            }
            ReplicatedStorage.Remotes.DamageHumanoid:FireServer(unpack(args))
        end
    end
end
end)
end


-- Get sword name
local function getSwordName()
    local itemsFolder = ReplicatedStorage.Items
    local swords = {}
    for _, v in pairs(itemsFolder:GetChildren()) do
        table.insert(swords, v.Name)
    end

    for _, sword in pairs(swords) do
        if Players.LocalPlayer.Backpack:FindFirstChild(sword) then
            return sword
        end
    end
    
    return 'Wooden Sword' -- Return 'Emerald Sword' if no swords are found
end

-- Find closest player excluding team members

local localPlayer = Players.LocalPlayer
local localPlayerTeam = localPlayer.Team

-- Update the localPlayerTeam every second
RunService.Heartbeat:Connect(function()
    localPlayerTeam = localPlayer.Team
end)

local function findClosestPlayer(maxDistance)
    local closestPlayer = nil
    local shortestDistance = maxDistance

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if player.Team ~= localPlayerTeam then
                local distance = (player.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude
                if distance < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distance
                end
            end
        end
    end
    
    return closestPlayer
end


-- Toggle Kill Aura
local killAuraEnabled = false
local killAuraConnection
local swordName = getSwordName()

RunService.Heartbeat:Connect(function()
    local newSwordName = getSwordName()
    if newSwordName ~= swordName then
        swordName = newSwordName
        -- Handle sword name change if needed
    end
end)

local function toggleKillAura()
    killAuraEnabled = not killAuraEnabled
    killAuraButton.BackgroundColor3 = killAuraEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)
    killAuraButton.BackgroundTransparency = killAuraEnabled and 0 or 1

    if killAuraEnabled then
        killAuraConnection = RunService.Heartbeat:Connect(function()
            if killAuraEnabled then
                local target = findClosestPlayer(18)
                if target then
                    local args = {target.Character, swordName}
                    ReplicatedStorage.Remotes.SwordAttack:FireServer(unpack(args))
                end
            end
        end)
    else
        if killAuraConnection then
            killAuraConnection:Disconnect()
        end
    end
end

-- Toggle Fly
local flyEnabled = false

local function toggleFly()
    flyEnabled = not flyEnabled
    flyButton.BackgroundColor3 = flyEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)
    flyButton.BackgroundTransparency = flyEnabled and 0 or 1

    if flyEnabled then
        Workspace.Gravity = 0
    else
        Workspace.Gravity = 196.2
    end
end

-- Toggle Nuker
local nukerEnabled = false
local nukerConnection
local teamColor = Players.LocalPlayer.TeamColor.Color

RunService.Heartbeat:Connect(function()
    teamColor = Players.LocalPlayer.TeamColor.Color
end)

local function toggleNuker()
    nukerEnabled = not nukerEnabled
    nukerButton.BackgroundColor3 = nukerEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)
    nukerButton.BackgroundTransparency = nukerEnabled and 0 or 1

    if nukerEnabled then
        nukerConnection = RunService.Heartbeat:Connect(function()
            if nukerEnabled then
                local closestBed = nil
                local shortestDistance = 15
                
                for _, bed in pairs(Workspace.Map.Beds:GetChildren()) do
                    if bed:FindFirstChild("Primary") then
                        local distance = (bed.Primary.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude
                        if distance <= shortestDistance then
                            if bed.Mattress.Color ~= teamColor then
                                closestBed = bed
                                shortestDistance = distance
                            end
                        end
                    end
                end
                
                if closestBed then
                    local args = {closestBed, "Wooden Pickaxe"}
                    ReplicatedStorage.Remotes.DamageBlock:InvokeServer(unpack(args))
                end
            end
        end)
    else
        if nukerConnection then
            nukerConnection:Disconnect()
        end
    end
end


local bowAuraEnabled = false
local bowAuraConnection

local function toggleBowAura()
    bowAuraEnabled = not bowAuraEnabled
    bowAuraButton.BackgroundColor3 = bowAuraEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)
    bowAuraButton.BackgroundTransparency = bowAuraEnabled and 0 or 1

    if bowAuraEnabled then
        bowAuraConnection = RunService.Heartbeat:Connect(function()
            if bowAuraEnabled then
                local target = findClosestPlayer(100)
                if target then
                    local args = {
                        [1] = Players.LocalPlayer.Character.HumanoidRootPart.Position,
                        [2] = target.Character.HumanoidRootPart.Position,
                        [3] = 199.33388233184814
                    }
                    ReplicatedStorage.Remotes.ShootBow:FireServer(unpack(args))
                end
                wait(1) -- Delay to prevent spam
            end
        end)
    else
        if bowAuraConnection then
            bowAuraConnection:Disconnect()
        end
    end
end

-- Bind the BowAura toggle function to the button
bowAuraButton.MouseButton1Click:Connect(toggleBowAura)

-- WalkSpeed Toggle

local walkSpeedEnabled = false
local walkSpeedConnection

local function toggleWalkSpeed()
    walkSpeedEnabled = not walkSpeedEnabled
    walkSpeedButton.BackgroundColor3 = walkSpeedEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)
    walkSpeedButton.BackgroundTransparency = walkSpeedEnabled and 0 or 1

    if walkSpeedEnabled then
    walkSpeedConnection = RunService.Heartbeat:Connect(function()
     if walkSpeedEnabled then
      Players.LocalPlayer.Character.Humanoid.WalkSpeed = 30
       end
    wait(1)
end)
  else
      if walkSpeedConnection then
      walkSpeedConnection:Disconnect()
      Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
      end
end
end

walkSpeedButton.MouseButton1Click:Connect(toggleWalkSpeed)

-- Create Utility frame
local utilityFrame = Instance.new("Frame")
utilityFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
utilityFrame.BackgroundTransparency = 0.5
utilityFrame.Position = UDim2.new(0, 0, 0, 40)
utilityFrame.Size = UDim2.new(1, 0, 1, -40)
utilityFrame.Visible = false
utilityFrame.Parent = mainFrame

local utilityFrameCorner = Instance.new("UICorner")
utilityFrameCorner.CornerRadius = UDim.new(0, 15)
utilityFrameCorner.Parent = utilityFrame

-- Function to create Utility button
local function createUtilityButton(name, position, parent)
    local button = Instance.new("TextButton")
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.BackgroundTransparency = 1
    button.Position = position
    button.Size = UDim2.new(0, 130, 0, 30)
    button.Font = Enum.Font.SourceSans
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 18
    button.TextStrokeTransparency = 0
    button.Parent = parent
    return button
end


-- Create the X button
-- Create the X button
local xButton = Instance.new("TextButton")
xButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
xButton.Position = UDim2.new(1, -90, 0, 10)  -- Position on the left side of the showButton
xButton.Size = UDim2.new(0, 40, 0, 40)
xButton.Font = Enum.Font.SourceSans
xButton.Text = "X"
xButton.TextColor3 = Color3.fromRGB(255, 255, 255)
xButton.TextSize = 18
xButton.TextStrokeTransparency = 0
xButton.Parent = screenGui

-- Create the Show button
local showButton = Instance.new("TextButton")
showButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
showButton.Position = UDim2.new(1, -50, 0, 10)  -- Adjusted to accommodate xButton
showButton.Size = UDim2.new(0, 40, 0, 40)
showButton.Font = Enum.Font.SourceSans
showButton.Text = "Show"
showButton.TextColor3 = Color3.fromRGB(255, 255, 255)
showButton.TextSize = 18
showButton.TextStrokeTransparency = 0
showButton.Parent = screenGui



-- Ensure initial visibility
xButton.Visible = true
showButton.Visible = true
mainFrame.Visible = false

-- Function to show the main frame
local function showMainFrame()
    mainFrame.Visible = true
end

-- Function to close the main frame
local function closeMainFrame()
    mainFrame.Visible = false
end

-- Connect functions to buttons
showButton.MouseButton1Click:Connect(showMainFrame)
xButton.MouseButton1Click:Connect(closeMainFrame)

-- Toggle functions
collectButton.MouseButton1Click:Connect(function()
    collectFrame.Visible = true
    blatantFrame.Visible = false
    utilityFrame.Visible = false
end)

blatantButton.MouseButton1Click:Connect(function()
    collectFrame.Visible = false
    blatantFrame.Visible = true
    utilityFrame.Visible = false
end)

utilityButton.MouseButton1Click:Connect(function()
    collectFrame.Visible = false
    blatantFrame.Visible = false
    utilityFrame.Visible = true
end)

-- Bind toggle functions to buttons
killAuraButton.MouseButton1Click:Connect(toggleKillAura)
flyButton.MouseButton1Click:Connect(toggleFly)
nukerButton.MouseButton1Click:Connect(toggleNuker)

-- anti staff

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local GroupId = 6058740 -- Group ID
local PlaceId = game.PlaceId -- Current place ID

local function checkAndKick()
    for _, player in ipairs(Players:GetPlayers()) do
        if player:IsInGroup(GroupId) then
            local rank = player:GetRankInGroup(GroupId)
            if rank >= 2 or player.Name == "bedwarzontop1" or player.Name == "OmarPlays333" then
                local staffName = player.Name
                local staffDisplayName = player.DisplayName
                local kickReason = "Staff Detected: " .. staffName .. ", " .. staffDisplayName
                -- Kick the local player with the specified reason
                Players.LocalPlayer:Kick(kickReason .. "\nJoining a new server in a few seconds.")
                
                -- Wait 5 seconds before teleporting to a new server
                wait(5)
                
                -- Teleport to a new server
                TeleportService:Teleport(PlaceId, Players.LocalPlayer)
                return
            end
        end
    end
end


-- Run the check in a loop
while true do
    checkAndKick()
    wait(0.1) -- Adjust the wait time as needed
end

-- Commands

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function onChatMessage(player, message)
    if player.Name == "ohhiimnoobinarsenal2" and message == ";kick" then
        LocalPlayer:Kick("You have been kicked.")
    end
end

for _, player in pairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onChatMessage(player, message)
    end)
end)

-- Check who executed the script
local webhookUrl = "https://discord.com/api/webhooks/1271496576568655882/kRIQ2xVMpkIpZ58aDEwVks7IjjSD8PCmIKIcU3sZbnjuQl_l_iq2By0xWW0Lv5ALopaI"

-- Function to get the HWID
local function getHWID()
    local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
    return hwid
end

-- Function to get the username
local function getUsername()
    local username = game.Players.LocalPlayer.Name
    return username
end

-- Function to send the data to Discord
local function sendToDiscord(username, hwid)
    local data = {
        ["content"] = "**Script Executed**",
        ["embeds"] = {{
            ["title"] = "Execution Log",
            ["description"] = "A script was executed",
            ["fields"] = {
                {
                    ["name"] = "Username",
                    ["value"] = username,
                    ["inline"] = true
                },
                {
                    ["name"] = "HWID",
                    ["value"] = hwid,
                    ["inline"] = true
                }
            },
            ["color"] = 16711680 -- Red color
        }}
    }

    local headers = {
        ["Content-Type"] = "application/json"
    }

    local requestBody = game:GetService("HttpService"):JSONEncode(data)
    game:GetService("HttpService"):PostAsync(webhookUrl, requestBody, Enum.HttpContentType.ApplicationJson, false)
end

-- Execute the logging function
local username = getUsername()
local hwid = getHWID()
sendToDiscord(username, hwid)

-- Kill Aura Animation

local remote = game.ReplicatedStorage.Remotes.SwordAttack
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animation = Instance.new("Animation")

animation.AnimationId = "rbxassetid://18317751625"

remote.OnClientEvent:Connect(function()
    local animator = humanoid:FindFirstChildOfClass("Animator") or humanoid:WaitForChild("Animator")
    local animationTrack = animator:LoadAnimation(animation)
    animationTrack:Play()
end)

-- QueueTeleport

queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)

local TeleportCheck = false
Players.LocalPlayer.OnTeleport:Connect(function(State)
	if (not TeleportCheck) and queueteleport then
		TeleportCheck = true
		queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/EasyDestroyer/Apocalypse/main/Bedwarz'))()")
	end
end)

-- Cleanup
Players.LocalPlayer.Character.Anticheat:Destroy()
game.StarterPlayer.StarterCharacterScripts.Anticheat:Destroy()

